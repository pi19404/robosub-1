Note: The prompt

ai $

represents the root of the repository.

------------------------------
-- Building the source code --
------------------------------

Overview: Perform an out-of-tree cmake build, then use make to build
the code.

ai $ mkdir build
ai $ cd build
ai/build $ cmake ../src
ai/build $ make
ai/build $ ./robosub --version


--------------------------------------------
-- Building the source code and the tests --
--------------------------------------------

Overview: This is trickier. First, we need to make sure
that gtest is correctly built. Then we need to build the testing code
using the CMakeLists.txt in the parent directory of the tests directory.
This is organized in this way so that the build is able to see both the
testing code and the project source code.

First download and build gtest.

 $ DEST_DIR=/my/favorite/install/path/
 $ cd $DEST_DIR
$DEST_DIR $ wget http://googletest.googlecode.com/files/gtest-1.6.0.zip
$DEST_DIR $ unzip gtest-1.6.0.zip
$DEST_DIR $ export GTEST_ROOT=GTEST_DEST_DIR/gtest-1.6.0
$DEST_DIR $ cd $GTEST_ROOT
$GTEST_ROOT $ mkdir build
$GTEST_ROOT $ cd build
$GTEST_ROOT/build $ cmake ..
$GTEST_ROOT $ make

Note: At this point, GTEST_ROOT must be declared! It is generally
easiest to place the line in your ~/.bashrc file.

 $ cd $AI
ai $ mkdir build
ai $ cd build
ai/build $ cmake ..
ai/build $ make
ai/build $ test/robosub_tests

Note: This process will also build the robosub executable in the src
folder.

